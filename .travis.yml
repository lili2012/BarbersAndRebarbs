language: generic
sudo: false
cache:
  apt: true
  directories:
    - /tmp

matrix:
  include:
    - env: SFML_INSTALLDIR="$HOME" COMPILER_NAME="GCC 5" CXX=g++-5 CC=gcc-5
      addons:
        apt:
          packages:
            - g++-5
            - libpthread-stubs0-dev
            - libgl1-mesa-dev
            - libx11-dev
            - libxrandr-dev
            - libfreetype6-dev
            - libglew-dev
            - libjpeg8-dev
            - libsndfile1-dev
            - libopenal-dev
            - libudev-dev
            - libx11-xcb-dev
            - libxcb-image0-dev
            - libxcb-randr0-dev
          sources: &sources
            - r-packages-precise
            - llvm-toolchain-precise-3.8
            - ubuntu-toolchain-r-test
    - env: SFML_INSTALLDIR="$HOME" COMPILER_NAME="Clang 3.8" CXX=clang++-3.8 CC=clang-3.8
      addons:
        apt:
          packages:
            - clang-3.8
            - libpthread-stubs0-dev
            - libgl1-mesa-dev
            - libx11-dev
            - libxrandr-dev
            - libfreetype6-dev
            - libglew-dev
            - libjpeg8-dev
            - libsndfile1-dev
            - libopenal-dev
            - libudev-dev
            - libx11-xcb-dev
            - libxcb-image0-dev
            - libxcb-randr0-dev
          sources: *sources

install:
  - ninja --version
  - export SFML_TAG=$(curl -SsL 'https://api.github.com/repos/SFML/SFML/tags' | perl -pe 's/[[:space:]]//g' | perl -pe 's/\}\},\{/}},\n{/g' | perl -pe 's/,/, /g' | awk '{print($3)}' | sed -e 's/^.*":"//g' -e 's/",//g' -e 's:/: / :g' | awk '/[[:digit:].]+$/ {print($14); exit}')
  - if [[ ! -d "/tmp/SFML-$SFML_TAG" ]]; then
      mkdir -p "/tmp/SFML";
      pushd "/tmp/SFML";
      curl -SL https://github.com/SFML/SFML/archive/$SFML_TAG.tar.gz | tar -xzf-
      cd "SFML-$SFML_TAG";
      mkdir build && cd build;
      cmake -G"Unix Makefiles" .. -DCMAKE_INSTALL_PREFIX:PATH="$SFML_INSTALLDIR";
      popd;
    fi
  - pushd "/tmp/SFML-$SFML_TAG/build"
  - make -j$(nproc) install
  - popd

script: make -j$(nproc)

before_deploy:
  - mkdir release
  - cp -r out/BarbersAndRebarbs assets release/
  - LD_LIBRARY_PATH="$SFML_INSTALLDIR/lib" ldd release/BarbersAndRebarbs | grep sfml | awk '{system("cp " $3 " release/")}'
  - strip --strip-all --remove-section=.comment --remove-section=.note release/BarbersAndRebarbs
  - tar -caf "BarbersAndRebarbs-$TRAVIS_TAG-$COMPILER_NAME.tbz2" release

deploy:
  provider: releases
  api-key:
    secure: ftpe/n5jmeu7Ad/Sxt5DxD/awQAz4oF9zSZ7ywpJF66ngsk9P9Q+ux063YlWz0gVZS7wy0blU8DG0Q1FpFt0/9oPBv/QhQwNAm61AX+XGVD/2MK7UGHvy8XWkYAG4STDP+v3PqrqAiQ+oS0+ku45RH47QFje5riWMOSDwsMkGEMeieEcoYUtdJtIUAPzetoHlCmO6Su40l3BQd5gLE+eyF+APeOIdg4mkTNu3IgZRhNG2has0vKRzcu5g29WcLrlIWsnybzl+kuWxfjFE2KAj3zoiVykqxReedypWRlp5Is+18G/AhGw0Gnvb+ktRxZQZ2lJVu0KnlKfyje3QFH6GTh14mtw2mJ07YAJnwDv8MBmPaPat57T8B17rOpjZCIGHUTw4MBLxjRx+es5slZYANnjEzLVx9lSw0p1c9JIIrR2/HuwWpN/BthabjLxAWdIvTgVyxQlCQidkCAdpO+D3SeDN1HxFooFG2mZkgWnjFjhfaYT8G0SF7fGO0oLAZzg1KneA+TjnlTU0nexLKi9Os89lJxdDv0sA9cayRxg5b51RO8rLAFGmtlc4aqJ0EFNN1HmXoMhQpIcQvGLOxYI/ogX8+rWaMOlYSI+9E4jH4kB6UPHP51ZKjYBRQkZpFOSooiMUKzuJVwz4+OYVSGDNGTuM2YrYC1ztTzps0d6ccY=
  file: "BarbersAndRebarbs-$TRAVIS_TAG-$COMPILER_NAME.tbz2"
  skip_cleanup: true
  on:
    tags: true
